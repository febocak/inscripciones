{"version":3,"sources":["./src/app/tables/distancias/components/competencia-info.component.html","./src/app/tables/distancias/components/distancias-form.component.html","./src/app/tables/distancias/components/distancias.component.html","./src/app/tables/distancias/components/competencia-info.component.ts","./src/app/tables/distancias/components/distancias-form.component.ts","./src/app/tables/distancias/components/distancias.component.ts","./src/app/tables/distancias/distancias-form-resolver.guard.ts","./src/app/tables/distancias/distancias-resolver.guard.ts","./src/app/tables/distancias/distancias-routing.module.ts","./src/app/tables/distancias/distancias.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8LAA+H,2BAA2B,sBAAsB,qBAAqB,UAAU,qBAAqB,gBAAgB,oBAAoB,uI;;;;;;;;;;;;ACAvR;AAAe,yYAA0U,wCAAwC,yoBAAyoB,sBAAsB,ikEAAikE,+DAA+D,gV;;;;;;;;;;;;ACAhqG;AAAe,0XAA2T,gBAAgB,+aAA+a,4DAA4D,gBAAgB,QAAQ,GAAG,MAAM,sBAAsB,iDAAiD,gBAAgB,QAAQ,GAAG,MAAM,wBAAwB,iDAAiD,gBAAgB,QAAQ,GAAG,MAAM,sBAAsB,wFAAwF,gBAAgB,UAAU,GAAG,wL;;;;;;;;;;;;;;;;;;ACA1oC;AAEd;AAO3C,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAGnC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;CACF;;YAR+B,wDAAQ;;AAF7B;IAAR,2DAAK,EAAE;6DAA2B;AADxB,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,gQAAgD;KAEjD,CAAC;GACW,wBAAwB,CAWpC;AAXoC;;;;;;;;;;;;;;;;;;;;;;;ACTa;AACkB;AAEX;AACd;AACoB;AACV;AAUrD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAOlC,YACU,WAAwB,EACxB,EAAe,EACf,GAAmB,EACnB,QAAkB,EAClB,QAAwB,EACxB,MAAc;QALd,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,QAAG,GAAH,GAAG,CAAgB;QACnB,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAQ;QAZxB,iBAAY,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAa3D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,mBACd,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,IACrD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CACnD,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpE,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEjE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAE;YACvC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAE;YACzC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAE;SACxC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAG,UAAU,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SAC1C;IACH,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,SAA4B;QACnC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,IAAI,YAAY,GAAG;YACjB,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;YAC/C,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACnD,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;SAChD;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAC/B,IAAI,CAAC,WAAW,qBAAO,IAAI,CAAC,WAAW,IAAE,SAAS,EAAE,CAAC,YAAY,CAAC,GAAC;SACpE;aAAM,IAAI,SAAS,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC;SAC9C;aAAM,IAAI,SAAS,KAAK,WAAW,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE,YAAY,CAAC;SAC1E;aAAM,IAAI,SAAS,KAAK,UAAU,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC;SAC5D;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC7F,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,iCAAiC,CAAC,EAC7F,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,iCAAiC,GAAG,KAAK,CAAC,UAAU,CAAC,EAC7E,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CACpB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAc;QACrB,MAAM,QAAQ,GAAE,EAAC,GAAG,EAAC,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAC,CAAC;QACvE,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,MAAM,QAAQ,GAAG,EAAC,GAAG,EAAC,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAC,CAAC;QAC7E,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;CAEF;;YAnGwB,kEAAW;YACpB,0DAAW;YACV,4EAAc;YACT,wDAAQ;YACR,8DAAc;YAChB,sDAAM;;AAbb,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,8PAA+C;;KAEhD,CAAC;GACW,uBAAuB,CA2GnC;AA3GmC;;;;;;;;;;;;;;;;;;;AChBc;AACD;AAUjD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,YAAqB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,WAAW,mBACd,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,IAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAC7C,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;IAC1C,CAAC;CAGF;;YAX6B,8DAAc;;AAH/B,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,oPAA0C;KAE3C,CAAC;GACW,mBAAmB,CAc/B;AAd+B;;;;;;;;;;;;;;;;;;;;ACXW;AAEU;AACT;AAQ5C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAEjC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,OAAO,CAAC,KAA6B,EAC7B,KAA0B;QAChC,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC1D,MAAM,QAAQ,GAAG,qDAAQ,CACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,EAAE,aAAa,CAAC,EAC1D,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY,EAAC,WAAW,CAAC,CAC1D,CAAC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;;YAZkC,kEAAW;;AAFjC,sBAAsB;IAHlC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,sBAAsB,CAclC;AAdkC;;;;;;;;;;;;;;;;;;;ACXQ;AAEU;AAQrD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,OAAO,CAAC,KAA6B,EAC7B,KAA0B;QAChC,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,EAAC,EAAE,CAAC,CAAC;IACxD,CAAC;CACF;;YAPkC,kEAAW;;AAFjC,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAS9B;AAT8B;;;;;;;;;;;;;;;;;;;;;;;ACVU;AACc;AAEU;AACS;AAEF;AACS;AAEjF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oFAAmB,EAAE;IAC5C,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,6EAAkB,EAAE,EAAE,SAAS,EAAE,oFAAmB,EAAE;IAC1G,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,sFAAsB,EAAE,EAAE,SAAS,EAAE,6FAAuB,EAAE;IAC1H,EAAE,IAAI,EAAE,4BAA4B,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,sFAAsB,EAAE,EAAE,SAAS,EAAE,6FAAuB,EAAE;CAC/H,CAAC;AAKF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAI;AAA3B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACnBK;AACM;AAEuB;AACJ;AAEM;AACS;AACE;AASnF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAP5B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAE,oFAAmB,EAAE,6FAAuB,EAAE,+FAAwB,CAAE;QACxF,OAAO,EAAE;YACP,4DAAY,EAAE,kFAAuB;YACrC,0DAAW,EAAE,kEAAmB;SACjC;KACF,CAAC;GACW,gBAAgB,CAAI;AAAJ","file":"tables-distancias-distancias-module-es2015.js","sourcesContent":["export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header\\\">\\n    Compentencia\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <p>{{ competencia.competencia }}</p>\\n    <p>Desde: {{ competencia.desde }} hasta: {{ competencia.hasta }} </p>\\n    <p>{{ competencia.club }}</p>\\n    \\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"goBack()\\\">\\n      Regresar\\n    </button>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-3\\\">\\n    <app-competencia-info\\n      [competencia]=\\\"competencia\\\"\\n    ></app-competencia-info>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" distancia\\\" }}\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"categoria\\\" class=\\\"control-label\\\"> Categoría </label>\\n                <select formControlName=\\\"categoria\\\" required\\n                  [class.is-invalid]=\\\"categoria.invalid && categoria.touched\\\" class=\\\"custom-select\\\">\\n                  <option value=\\\"categoria\\\"></option>\\n                  <option [value]=\\\"registro.categoria\\\" *ngFor=\\\"let registro of tblCategoria\\\" >{{ registro.categoria }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"categoria.untouched || !categoria.hasError('required')\\\">La categoría es requerida</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"embarcacion\\\" class=\\\"control-label\\\"> Embarcación </label>\\n                <select formControlName=\\\"embarcacion\\\" required\\n                  [class.is-invalid]=\\\"embarcacion.invalid && embarcacion.touched\\\" class=\\\"custom-select\\\">\\n                  <option value=\\\"embarcacion\\\"></option>\\n                  <option value=\\\"K1\\\">K1</option>\\n                  <option value=\\\"K2\\\">K2</option>\\n                  <option value=\\\"K4\\\">K4</option>\\n                  <option value=\\\"430\\\">430</option>\\n                  <option value=\\\"canoa\\\">Canoa</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"embarcacion.untouched || !embarcacion.hasError('required')\\\">El tipo de embarcación es requerido</small>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"distancia\\\" class=\\\"control-label\\\"> Distancia </label>\\n                <input type=\\\"text\\\" formControlName=\\\"distancia\\\" maxlength=\\\"80\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n                  [class.is-invalid]=\\\"distancia.invalid && distancia.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"distancia.untouched || !distancia.hasError('required')\\\">La distancia es requerida</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-3\\\">\\n    <app-competencia-info\\n      [competencia]=\\\"competencia\\\"\\n    ></app-competencia-info>\\n  </div>\\n\\n  <div class=\\\"col-lg-9\\\">\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header d-flex\\\">\\n        Distancias\\n        <a routerLink=\\\"/distancias/{{competencia.id}}/add\\\" class=\\\"text-primary ml-auto\\\">\\n          <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"table table-bordered table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th> Categoría </th>\\n          <th> Embarcación </th>\\n          <th> Distancia </th>\\n          <th> </th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr *ngFor=\\\"let registro of tabla; let i = index\\\">\\n          <td routerLink=\\\"/distancias/{{competencia.id}}/edit/{{i}}\\\"> {{ registro.categoria }} </td>\\n          <td routerLink=\\\"/distancias/{{competencia.id}}/edit/{{i}}\\\"> {{ registro.embarcacion }} </td>\\n          <td routerLink=\\\"/distancias/{{competencia.id}}/edit/{{i}}\\\"> {{ registro.distancia }} </td>\\n          <td class=\\\"text-center\\\">\\n            <a routerLink=\\\"/distancias/{{competencia.id}}/delete/{{i}}\\\" class=\\\"text-danger\\\">\\n              <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CompetenciaI } from '@models/competencia';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-competencia-info',\n  templateUrl: './competencia-info.component.html',\n  styles: []\n})\nexport class CompetenciaInfoComponent implements OnInit {\n  @Input() competencia: CompetenciaI;\n\n  constructor(private location: Location) { }\n\n  ngOnInit() {\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MessageService } from '@core/message/message.service';\nimport { CrudService } from '@services/crud.service';\n\nimport { CompetenciaI } from '@models/competencia';\nimport { CategoriaI } from '@models/categoria';\n\n@Component({\n  selector: 'app-distancias-form',\n  templateUrl: './distancias-form.component.html',\n  styles: ['']\n})\nexport class DistanciasFormComponent implements OnInit {\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\n  miForm: FormGroup;\n\n  competencia: CompetenciaI;\n  tblCategoria: CategoriaI[];\n\n  constructor(\n    private crudService: CrudService, \n    private fb: FormBuilder,      \n    private msg: MessageService,\n    private location: Location, \n    private actRoute: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    this.msg.clearMessages();\n    this.competencia = { \n      id: this.actRoute.snapshot.paramMap.get('idCompetencia'),\n      ...this.actRoute.snapshot.data['distanciaData'][0]\n    };\n    this.tblCategoria = this.actRoute.snapshot.data['distanciaData'][1];\n    \n    const action = this.actRoute.snapshot.paramMap.get('action');\n    this.templateData.titulo = this.getTitle(action);\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\n\n    this.buildForm();\n    if (this.templateData.titulo !== 'Agregar') {\n      this.setFormData();\n    }\n  }\n\n  buildForm() {\n    this.miForm = this.fb.group({\n      categoria: ['', [Validators.required] ],\n      embarcacion: ['', [Validators.required] ],\n      distancia: ['', [Validators.required] ]\n    });\n  }\n\n  setFormData() {\n    const record = this.competencia.distancia[this.templateData.id];\n    this.miForm.patchValue(record);\n    if (this.templateData.titulo==='Eliminar') {\n      this.miForm.controls.categoria.disable();\n    }\n  }\n\n  get embarcacion() {\n    return this.miForm.get('embarcacion');\n  }\n  get distancia() {\n    return this.miForm.get('distancia');\n  }\n  get categoria() {\n    return this.miForm.get('categoria');\n  }\n\n  onSubmit(submitBtn: HTMLButtonElement) {\n    submitBtn.disabled = true;\n    \n    this.prepararArreglo(this.templateData.titulo);\n    this.guardar();\n  }\n  \n  prepararArreglo(parAccion: string) {\n    let objDistancia = {\n      categoria: this.miForm.controls.categoria.value,\n      embarcacion: this.miForm.controls.embarcacion.value,\n      distancia: this.miForm.controls.distancia.value,\n    }\n    if (!this.competencia.distancia) {\n      this.competencia = {...this.competencia, distancia: [objDistancia]}\n    } else if (parAccion === 'Agregar') {\n      this.competencia.distancia.push(objDistancia)\n    } else if (parAccion === 'Modificar') {\n      this.competencia.distancia.splice(+this.templateData.id, 1, objDistancia)\n    } else if (parAccion === 'Eliminar') {\n      this.competencia.distancia.splice(+this.templateData.id, 1)\n    }\n  }\n\n  guardar() {\n    this.crudService.updateRecord$('competencias', this.competencia.id, this.competencia).subscribe(\n      _ => this.msg.ok(this.miForm.controls['distancia'].value + ' Actualizado satisfactoriamente'),\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\n      () => this.goBack()\n    );\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getTitle(action: string) {\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\n    return objTitle[action];\n  }\n  \n  getClassHeader(action: string) {\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\n    return objStyle[action];\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CompetenciaI } from '@models/competencia';\nimport { DistanciaI } from '@models/competencia';\n\n@Component({\n  selector: 'app-distanciass',\n  templateUrl: './distancias.component.html',\n  styles: []\n})\nexport class DistanciasComponent implements OnInit {\n  competencia: CompetenciaI;\n  tabla: DistanciaI[];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.competencia = { \n      id: this.route.snapshot.paramMap.get('idCompetencia'),\n      ...this.route.snapshot.data['distanciaData']\n    };\n    this.tabla = this.competencia.distancia;\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable, forkJoin } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CompetenciaI } from '@models/competencia';\nimport { CategoriaI } from '@models/categoria';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistanciasFormResolver  implements Resolve<[CompetenciaI, CategoriaI[]]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<[CompetenciaI, CategoriaI[]]> {\n    const idCompetencia = route.paramMap.get('idCompetencia');\n    const allData$ = forkJoin(\n      this.crudService.getRecord$('competencias', idCompetencia),\n      this.crudService.getAllRecords$('categorias','categoria')\n    );\n    \n    return allData$;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CompetenciaI } from '@models/competencia';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistanciasResolver implements Resolve<CompetenciaI> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<CompetenciaI> {\n    const id = route.paramMap.get('idCompetencia');\n    return this.crudService.getRecord$('competencias',id);\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DistanciasResolver } from './distancias-resolver.guard';\nimport { DistanciasFormResolver } from './distancias-form-resolver.guard';\n\nimport { DistanciasComponent } from './components/distancias.component';\nimport { DistanciasFormComponent } from './components/distancias-form.component';\n\nconst routes: Routes = [\n  { path: '', component: DistanciasComponent },\n  { path: ':idCompetencia', resolve: { distanciaData: DistanciasResolver }, component: DistanciasComponent },\n  { path: ':idCompetencia/:action', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent },\n  { path: ':idCompetencia/:action/:id', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DistanciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DistanciasRoutingModule } from './distancias-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DistanciasComponent } from './components/distancias.component';\nimport { DistanciasFormComponent } from './components/distancias-form.component';\nimport { CompetenciaInfoComponent } from './components/competencia-info.component';\n\n@NgModule({\n  declarations: [ DistanciasComponent, DistanciasFormComponent, CompetenciaInfoComponent ],\n  imports: [\n    CommonModule, DistanciasRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class DistanciasModule { }\n"],"sourceRoot":"webpack:///"}