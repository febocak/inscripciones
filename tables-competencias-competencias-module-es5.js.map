{"version":3,"sources":["src/app/tables/competencias/components/competencias-form.component.html","src/app/tables/competencias/components/competencias.component.html","src/app/tables/competencias/competencias-form-resolver.guard.ts","src/app/tables/competencias/competencias-resolver.guard.ts","src/app/tables/competencias/competencias-routing.module.ts","src/app/tables/competencias/competencias.module.ts","src/app/tables/competencias/components/competencias-form.component.ts","src/app/tables/competencias/components/competencias.component.ts"],"names":[],"mappings":";;sUAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,kgHAAA,C;;6TCAf,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,4xCAAA,C;;+/BCWf,GAAa,CAAA,wBAAb,yBAEE,kCAAoB,WAApB,CAA4C,CAAxB,KAAA,WAAA,CAAA,WAA6B,CAFnD,qDAIE,OAJF,CAIE,iBAAQ,KAAR,CACQ,KADR,CACkC,CAChC,GAAM,CAAA,EAAE,CAAG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,IAAnB,CAAX,CACA,GAAM,CAAA,QAAQ,CAAG,MAAA,CAAA,iCAAA,CAAA,UAAA,CAAA,CAAA,CACf,KAAK,WAAL,CAAiB,UAAjB,CAA4B,cAA5B,CAA2C,EAA3C,CADe,CAEf,KAAK,WAAL,CAAiB,cAAjB,CAAgC,QAAhC,CAAyC,QAAzC,CAFe,CAAjB,CAKA,MAAO,CAAA,QACR,CAbH,mCAAA,C,gEAEmC,mDAAA,CAAA,aAAA,C,IAFtB,wBAAwB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHpC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACV,UAAU,CAAE,MADF,CAAX,CAGoC,CAAA,CAAxB,wBAAwB,CAAxB,C;;w2BCDb,GAAa,CAAA,oBAAb,yBAEE,8BAAoB,WAApB,CAA4C,CAAxB,KAAA,WAAA,CAAA,WAA6B,CAFnD,mDAIE,OAJF,CAIE,iBAAQ,KAAR,CACQ,KADR,CACkC,CAChC,MAAO,MAAK,WAAL,CAAiB,cAAjB,CAAgC,cAAhC,CAA+C,aAA/C,CACR,CAPH,+BAAA,C,4DAEmC,mDAAA,CAAA,aAAA,C,IAFtB,oBAAoB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHhC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACV,UAAU,CAAE,MADF,CAAX,CAGgC,CAAA,CAApB,oBAAoB,CAApB,C;;kuDCDb,GAAM,CAAA,MAAM,CAAW,CACrB,CAAE,IAAI,CAAE,EAAR,CAAY,OAAO,CAAE,CAAE,eAAe,CAAE,yDAAA,CAAA,sBAAA,CAAnB,CAArB,CAAgE,SAAS,CAAE,+DAAA,CAAA,uBAAA,CAA3E,CADqB,CAErB,CAAE,IAAI,CAAE,SAAR,CAAmB,OAAO,CAAE,CAAE,eAAe,CAAE,8DAAA,CAAA,0BAAA,CAAnB,CAA5B,CAA2E,SAAS,CAAE,oEAAA,CAAA,2BAAA,CAAtF,CAFqB,CAGrB,CAAE,IAAI,CAAE,aAAR,CAAuB,OAAO,CAAE,CAAE,eAAe,CAAE,8DAAA,CAAA,0BAAA,CAAnB,CAAhC,CAA+E,SAAS,CAAE,oEAAA,CAAA,2BAAA,CAA1F,CAHqB,CAAvB,CAUA,GAAa,CAAA,yBAAb,uCAAA,CAAa,yBAAyB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJrC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,CACR,OAAO,CAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD,CAER,OAAO,CAAE,CAAC,4CAAA,CAAA,cAAA,CAAD,CAFD,CAAT,CAIqC,CAAA,CAAzB,yBAAyB,CAAzB,C;;qoDCHb,GAAa,CAAA,kBAAb,gCAAA,CAAa,kBAAkB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAP9B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,CACR,YAAY,CAAE,CAAE,+DAAA,CAAA,uBAAA,CAAF,CAAyB,oEAAA,CAAA,2BAAA,CAAzB,CADN,CAER,OAAO,CAAE,CACP,4CAAA,CAAA,cAAA,CADO,CACO,yDAAA,CAAA,2BAAA,CADP,CAEP,2CAAA,CAAA,aAAA,CAFO,CAEM,2CAAA,CAAA,qBAAA,CAFN,CAFD,CAAT,CAO8B,CAAA,CAAlB,kBAAkB,CAAlB,C;;4iDCAb,GAAa,CAAA,yBAAb,yBAKE,mCACU,WADV,CAEU,EAFV,CAGU,GAHV,CAIU,QAJV,CAKU,QALV,CAMU,MANV,CAMwB,CALd,KAAA,WAAA,CAAA,WAAA,CACA,KAAA,EAAA,CAAA,EAAA,CACA,KAAA,GAAA,CAAA,GAAA,CACA,KAAA,QAAA,CAAA,QAAA,CACA,KAAA,QAAA,CAAA,QAAA,CACA,KAAA,MAAA,CAAA,MAAA,CAVV,KAAA,YAAA,CAAe,CAAE,MAAM,CAAE,EAAV,CAAc,eAAe,CAAE,EAA/B,CAAmC,EAAE,CAAE,EAAvC,CAWd,CAZH,wDAcE,QAdF,CAcE,mBAAQ,CACN,KAAK,GAAL,CAAS,aAAT,GACA,KAAK,SAAL,CAAiB,KAAK,QAAL,CAAc,QAAd,CAAuB,IAAvB,CAA4B,iBAA5B,EAA+C,CAA/C,CAAjB,CAEA,GAAM,CAAA,MAAM,CAAG,KAAK,QAAL,CAAc,QAAd,CAAuB,QAAvB,CAAgC,GAAhC,CAAoC,QAApC,CAAf,CACA,KAAK,YAAL,CAAkB,MAAlB,CAA2B,KAAK,QAAL,CAAc,MAAd,CAA3B,CACA,KAAK,YAAL,CAAkB,eAAlB,CAAoC,KAAK,cAAL,CAAoB,MAApB,CAApC,CACA,KAAK,YAAL,CAAkB,EAAlB,CAAuB,KAAK,QAAL,CAAc,QAAd,CAAuB,QAAvB,CAAgC,GAAhC,CAAoC,IAApC,CAAvB,CAEA,KAAK,SAAL,GACA,GAAI,KAAK,YAAL,CAAkB,MAAlB,GAA6B,SAAjC,CAA4C,CAC1C,KAAK,WAAL,EACD,CACF,CA3BH,SA6BE,SA7BF,CA6BE,oBAAS,CACP,KAAK,MAAL,CAAc,KAAK,EAAL,CAAQ,KAAR,CAAc,CAC1B,KAAK,CAAE,CAAC,EAAD,CAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CADmB,CAE1B,KAAK,CAAE,CAAC,EAAD,CAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CAFmB,CAG1B,WAAW,CAAE,CAAC,EAAD,CAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAHa,CAI1B,IAAI,CAAE,CAAC,EAAD,CAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CAJoB,CAAd,CAMf,CApCH,SAsCE,WAtCF,CAsCE,sBAAW,CACT,GAAM,CAAA,MAAM,CAAG,KAAK,QAAL,CAAc,QAAd,CAAuB,IAAvB,CAA4B,iBAA5B,EAA+C,CAA/C,CAAf,CACA,KAAK,MAAL,CAAY,UAAZ,CAAuB,MAAvB,EACA,GAAI,KAAK,YAAL,CAAkB,MAAlB,GAA2B,UAA/B,CAA2C,CACzC,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,OAA1B,EACD,CACF,CA5CH,SA2DE,QA3DF,CA2DE,kBAAS,SAAT,CAAqC,CACnC,SAAS,CAAC,QAAV,CAAqB,IAArB,CAEA,GAAM,CAAA,MAAM,CAAA,MAAA,CAAA,MAAA,CAAA,CAAK,EAAE,CAAE,KAAK,YAAL,CAAkB,EAA3B,CAAA,CAAiC,KAAK,MAAL,CAAY,KAA7C,CAAZ,CACA,OAAQ,KAAK,YAAL,CAAkB,MAA1B,EACE,IAAK,SAAL,CACE,KAAK,cAAL,CAAoB,MAApB,EACA,MACF,IAAK,WAAL,CACE,KAAK,aAAL,CAAmB,MAAnB,EACA,MACF,IAAK,UAAL,CACE,KAAK,eAAL,CAAqB,MAArB,EACA,MATJ,CAWD,CA1EH,SA4EE,cA5EF,CA4EE,wBAAe,MAAf,CAAmC,gBACjC,KAAK,WAAL,CAAiB,UAAjB,CAA4B,cAA5B,CAA4C,MAA5C,EAAoD,SAApD,CACE,SAAA,CAAC,QAAI,CAAA,KAAI,CAAC,GAAL,CAAS,EAAT,CAAY,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,aAArB,EAAoC,KAApC,CAA4C,8BAAxD,CAAJ,CADH,CAEE,SAAA,KAAK,QAAI,CAAA,KAAI,CAAC,GAAL,CAAS,KAAT,CAAe,+BAAiC,KAAK,CAAC,UAAtD,CAAJ,CAFP,CAGE,iBAAM,CAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,cAAD,CAArB,CAAN,CAHF,CAKD,CAlFH,SAoFE,aApFF,CAoFE,uBAAc,MAAd,CAAkC,iBAChC,KAAK,WAAL,CAAiB,aAAjB,CAA+B,cAA/B,CAA+C,MAAM,CAAC,EAAtD,CAA0D,MAA1D,EAAkE,SAAlE,CACE,SAAA,CAAC,QAAI,CAAA,MAAI,CAAC,GAAL,CAAS,EAAT,CAAY,MAAM,CAAC,WAAP,CAAqB,iCAAjC,CAAJ,CADH,CAEE,SAAA,KAAK,QAAI,CAAA,MAAI,CAAC,GAAL,CAAS,KAAT,CAAe,kCAAoC,KAAK,CAAC,UAAzD,CAAJ,CAFP,CAGE,iBAAM,CAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,cAAD,CAArB,CAAN,CAHF,CAKD,CA1FH,SA4FE,eA5FF,CA4FE,yBAAgB,MAAhB,CAAoC,iBAClC,KAAK,WAAL,CAAiB,aAAjB,CAA+B,cAA/B,CAA+C,MAAM,CAAC,EAAtD,EAA0D,SAA1D,CACE,SAAA,CAAC,QAAI,CAAA,MAAI,CAAC,GAAL,CAAS,EAAT,CAAY,MAAM,CAAC,WAAP,CAAqB,+BAAjC,CAAJ,CADH,CAEE,SAAA,KAAK,QAAI,CAAA,MAAI,CAAC,GAAL,CAAS,KAAT,CAAe,gCAAkC,KAAK,CAAC,UAAvD,CAAJ,CAFP,CAGE,iBAAM,CAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,cAAD,CAArB,CAAN,CAHF,CAKD,CAlGH,SAoGE,MApGF,CAoGE,iBAAM,CACJ,KAAK,QAAL,CAAc,IAAd,EACD,CAtGH,SAwGE,QAxGF,CAwGE,kBAAS,MAAT,CAAuB,CACrB,GAAM,CAAA,QAAQ,CAAE,CAAC,GAAG,CAAC,SAAL,CAAgB,IAAI,CAAE,WAAtB,CAAmC,MAAM,CAAE,UAA3C,CAAhB,CACA,MAAO,CAAA,QAAQ,CAAC,MAAD,CAChB,CA3GH,SA6GE,cA7GF,CA6GE,wBAAe,MAAf,CAA6B,CAC3B,GAAM,CAAA,QAAQ,CAAG,CAAC,GAAG,CAAC,YAAL,CAAmB,IAAI,CAAE,YAAzB,CAAuC,MAAM,CAAE,WAA/C,CAAjB,CACA,MAAO,CAAA,QAAQ,CAAC,MAAD,CAChB,CAhHH,wEA8CW,CACP,MAAO,MAAK,MAAL,CAAY,GAAZ,CAAgB,OAAhB,CACR,CAhDH,iCAiDW,CACP,MAAO,MAAK,MAAL,CAAY,GAAZ,CAAgB,OAAhB,CACR,CAnDH,uCAoDiB,CACb,MAAO,MAAK,MAAL,CAAY,GAAZ,CAAgB,aAAhB,CACR,CAtDH,gCAuDU,CACN,MAAO,MAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,CACR,CAzDH,uCAAA,C,iEAMyB,mDAAA,CAAA,aAAA,C,QACT,2CAAA,CAAA,aAAA,C,QACC,0DAAA,CAAA,gBAAA,C,QACK,4CAAA,CAAA,UAAA,C,QACA,4CAAA,CAAA,gBAAA,C,QACF,4CAAA,CAAA,QAAA,C,IAXP,yBAAyB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,CACT,QAAQ,CAAE,uBADD,CAET,QAAA,CAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA,CAAA,oDAAA,iHAAA,CAAA,EAAA,OAFS,C,WAAA,CAAV,CAKqC,CAAA,CAAzB,yBAAyB,CAAzB,C;;w3BCRb,GAAa,CAAA,qBAAb,yBAEE,+BAAqB,KAArB,CAA0C,CAArB,KAAA,KAAA,CAAA,KAA0B,CAFjD,oDAIE,QAJF,CAIE,mBAAQ,CACN,KAAK,KAAL,CAAa,KAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,iBAAzB,CACd,CANH,gCAAA,C,6DAE8B,4CAAA,CAAA,gBAAA,C,IAFjB,qBAAqB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,CACT,QAAQ,CAAE,kBADD,CAET,QAAA,CAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA,CAAA,+CAAA,4GAAA,CAAA,EAAA,OAFS,CAAV,CAKiC,CAAA,CAArB,qBAAqB,CAArB,C","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" Compentencia\\\" }}\\n        \\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"desde\\\" class=\\\"control-label\\\"> Desde </label>\\n                <input type=\\\"date\\\" formControlName=\\\"desde\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n                  [class.is-invalid]=\\\"desde.invalid && desde.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"desde.untouched || !desde.hasError('required')\\\">El campo desde es requerido</small>\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"hasta\\\" class=\\\"control-label\\\"> hasta </label>\\n                <input type=\\\"date\\\" formControlName=\\\"hasta\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n                  [class.is-invalid]=\\\"hasta.invalid && hasta.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"hasta.untouched || !hasta.hasError('required')\\\">El campo hasta es requerido</small>\\n              </div>\\n\\n            </div>\\n\\n          </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"competencia\\\" class=\\\"control-label\\\"> Descripción </label>\\n                <input type=\\\"text\\\" formControlName=\\\"competencia\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\" required maxlength=\\\"80\\\"\\n                  [class.is-invalid]=\\\"competencia.invalid && competencia.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"competencia.untouched || !competencia.hasError('required')\\\">La descripción es requerida</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"competencia.untouched || !competencia.hasError('minlength')\\\">La longitud mínima es 2</small>\\n              </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\n            <select formControlName=\\\"club\\\" required\\n              [class.is-invalid]=\\\"club.invalid && club.touched\\\" class=\\\"custom-select\\\">\\n              <option value=\\\"club\\\"></option>\\n              <option [value]=\\\"registro.nombre\\\" *ngFor=\\\"let registro of tblClubes\\\" >{{ registro.nombre }}</option>\\n            </select>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.untouched || !club.hasError('required')\\\">El club es requerido</small>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header d-flex\\\">\\n    Competencias\\n    <a routerLink=\\\"/competencias/add\\\" class=\\\"text-primary ml-auto\\\">\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n    </a>\\n  </div>\\n</div>\\n\\n<table class=\\\"table table-bordered table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th> Desde </th>\\n      <th> Hasta </th>\\n      <th> Competencia </th>\\n      <th> Club </th>\\n      <th> </th>\\n      <th> </th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.desde }} </td>\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.hasta }} </td>\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.competencia }} </td>\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.club }} </td>\\n      <td class=\\\"text-center\\\">\\n        <a routerLink=\\\"/distancias/{{registro.id}}\\\" class=\\\"text-primary\\\">\\n          <i class=\\\"fa fa-cogs fa-2x\\\"></i>\\n        </a>\\n      </td>\\n      <td class=\\\"text-center\\\">\\n        <a routerLink=\\\"/competencias/delete/{{registro.id}}\\\" class=\\\"text-danger\\\">\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CrudService } from '@services/crud.service';\nimport { CompetenciaI } from '@models/competencia';\nimport { ClubI } from '@models/club';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetenciasFormResolver implements Resolve<[CompetenciaI, ClubI[]]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<[CompetenciaI, ClubI[]]> {\n    const id = route.paramMap.get('id');\n    const allData$ = forkJoin(\n      this.crudService.getRecord$('competencias',id),\n      this.crudService.getAllRecords$('clubes','nombre')\n    );\n    \n    return allData$;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ClubI } from '@models/club';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetenciasResolver implements Resolve<ClubI[]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<ClubI[]> {\n    return this.crudService.getAllRecords$('competencias','competencia');\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompetenciasResolver } from './competencias-resolver.guard';\nimport { CompetenciasComponent } from './components/competencias.component';\n\nimport { CompetenciasFormResolver } from './competencias-form-resolver.guard';\nimport { CompetenciasFormComponent } from './components/competencias-form.component';\n\nconst routes: Routes = [\n  { path: '', resolve: { competenciaData: CompetenciasResolver }, component: CompetenciasComponent },\n  { path: ':action', resolve: { competenciaData: CompetenciasFormResolver }, component: CompetenciasFormComponent },\n  { path: ':action/:id', resolve: { competenciaData: CompetenciasFormResolver }, component: CompetenciasFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompetenciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompetenciasRoutingModule } from './competencias-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CompetenciasComponent } from './components/competencias.component';\nimport { CompetenciasFormComponent } from './components/competencias-form.component';\n\n@NgModule({\n  declarations: [ CompetenciasComponent, CompetenciasFormComponent ],\n  imports: [\n    CommonModule, CompetenciasRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class CompetenciasModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MessageService } from '@core/message/message.service';\nimport { CrudService } from '@services/crud.service';\n\nimport { ClubI } from '@models/club';\nimport { CompetenciaI } from '@models/competencia';\n\n@Component({\n  selector: 'app-competencias-form',\n  templateUrl: './competencias-form.component.html',\n  styles: ['']\n})\nexport class CompetenciasFormComponent implements OnInit {\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\n  miForm: FormGroup;\n  tblClubes: ClubI[];\n\n  constructor(\n    private crudService: CrudService, \n    private fb: FormBuilder,      \n    private msg: MessageService,\n    private location: Location, \n    private actRoute: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    this.msg.clearMessages();\n    this.tblClubes = this.actRoute.snapshot.data['competenciaData'][1];\n\n    const action = this.actRoute.snapshot.paramMap.get('action');\n    this.templateData.titulo = this.getTitle(action);\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\n\n    this.buildForm();\n    if (this.templateData.titulo !== 'Agregar') {\n      this.setFormData();\n    }\n  }\n\n  buildForm() {\n    this.miForm = this.fb.group({\n      desde: ['', [Validators.required] ],\n      hasta: ['', [Validators.required] ],\n      competencia: ['', [Validators.required, Validators.minLength(3)] ],\n      club: ['', [Validators.required]]\n    });\n  }\n\n  setFormData() {\n    const record = this.actRoute.snapshot.data['competenciaData'][0];\n    this.miForm.patchValue(record);\n    if (this.templateData.titulo==='Eliminar') {\n      this.miForm.controls.club.disable();\n    }\n  }\n\n  get desde() {\n    return this.miForm.get('desde');\n  }\n  get hasta() {\n    return this.miForm.get('hasta');\n  }\n  get competencia() {\n    return this.miForm.get('competencia');\n  }\n  get club() {\n    return this.miForm.get('club');\n  }\n\n  onSubmit(submitBtn: HTMLButtonElement) {\n    submitBtn.disabled = true;\n    \n    const record = { id: this.templateData.id,...this.miForm.value }\n    switch (this.templateData.titulo) {\n      case 'Agregar':\n        this.aceptarAgregar(record);\n        break;\n      case 'Modificar':\n        this.aceptarEditar(record);\n        break;\n      case 'Eliminar':\n        this.aceptarEliminar(record);\n        break;\n    }\n  }\n  \n  aceptarAgregar(record: CompetenciaI) {\n    this.crudService.addRecord$('competencias', record).subscribe(\n      _ => this.msg.ok(this.miForm.controls['competencia'].value + ' Agregado satisfactoriamente'),\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\n      () => this.router.navigate(['competencias'])\n    );\n  }\n\n  aceptarEditar(record: CompetenciaI) {\n    this.crudService.updateRecord$('competencias', record.id, record).subscribe(\n      _ => this.msg.ok(record.competencia + ' Actualizado satisfactoriamente'),\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\n      () => this.router.navigate(['competencias'])\n    );\n  }\n\n  aceptarEliminar(record: CompetenciaI) {\n    this.crudService.deleteRecord$('competencias', record.id).subscribe(\n      _ => this.msg.ok(record.competencia + ' Eliminado satisfactoriamente'),\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\n      () => this.router.navigate(['competencias'])\n    );\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getTitle(action: string) {\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\n    return objTitle[action];\n  }\n  \n  getClassHeader(action: string) {\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\n    return objStyle[action];\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-competencias',\n  templateUrl: './competencias.component.html',\n  styles: []\n})\nexport class CompetenciasComponent implements OnInit {\n  tabla: [];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['competenciaData'];\n  }\n\n}\n"],"sourceRoot":"webpack:///"}