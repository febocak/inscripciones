{"version":3,"sources":["src/app/tables/distancias/components/competencia-info.component.html","src/app/tables/distancias/components/distancias-form.component.html","src/app/tables/distancias/components/distancias.component.html","src/app/tables/distancias/components/competencia-info.component.ts","src/app/tables/distancias/components/distancias-form.component.ts","src/app/tables/distancias/components/distancias.component.ts","src/app/tables/distancias/distancias-form-resolver.guard.ts","src/app/tables/distancias/distancias-resolver.guard.ts","src/app/tables/distancias/distancias-routing.module.ts","src/app/tables/distancias/distancias.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header\\\">\\n    Compentencia\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <p>{{ competencia.competencia }}</p>\\n    <p>Desde: {{ competencia.desde }} hasta: {{ competencia.hasta }} </p>\\n    <p>{{ competencia.club }}</p>\\n    \\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"goBack()\\\">\\n      Regresar\\n    </button>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-3\\\">\\n    <app-competencia-info\\n      [competencia]=\\\"competencia\\\"\\n    ></app-competencia-info>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" distancia\\\" }}\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"categoria\\\" class=\\\"control-label\\\"> Categoría </label>\\n                <select formControlName=\\\"categoria\\\" required\\n                  [class.is-invalid]=\\\"categoria.invalid && categoria.touched\\\" class=\\\"custom-select\\\">\\n                  <option value=\\\"categoria\\\"></option>\\n                  <option [value]=\\\"registro.categoria\\\" *ngFor=\\\"let registro of tblCategoria\\\" >{{ registro.categoria }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"categoria.untouched || !categoria.hasError('required')\\\">La categoría es requerida</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"embarcacion\\\" class=\\\"control-label\\\"> Embarcación </label>\\n                <select formControlName=\\\"embarcacion\\\" required\\n                  [class.is-invalid]=\\\"embarcacion.invalid && embarcacion.touched\\\" class=\\\"custom-select\\\">\\n                  <option value=\\\"embarcacion\\\"></option>\\n                  <option value=\\\"K1\\\">K1</option>\\n                  <option value=\\\"K2\\\">K2</option>\\n                  <option value=\\\"K4\\\">K4</option>\\n                  <option value=\\\"430\\\">430</option>\\n                  <option value=\\\"canoa\\\">Canoa</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"embarcacion.untouched || !embarcacion.hasError('required')\\\">El tipo de embarcación es requerido</small>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"distancia\\\" class=\\\"control-label\\\"> Distancia </label>\\n                <input type=\\\"text\\\" formControlName=\\\"distancia\\\" maxlength=\\\"80\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n                  [class.is-invalid]=\\\"distancia.invalid && distancia.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"distancia.untouched || !distancia.hasError('required')\\\">La distancia es requerida</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-3\\\">\\n    <app-competencia-info\\n      [competencia]=\\\"competencia\\\"\\n    ></app-competencia-info>\\n  </div>\\n\\n  <div class=\\\"col-lg-9\\\">\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header d-flex\\\">\\n        Distancias\\n        <a routerLink=\\\"/distancias/{{competencia.id}}/add\\\" class=\\\"text-primary ml-auto\\\">\\n          <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"table table-bordered table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th> Categoría </th>\\n          <th> Embarcación </th>\\n          <th> Distancia </th>\\n          <th> </th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr *ngFor=\\\"let registro of tabla; let i = index\\\">\\n          <td routerLink=\\\"/distancias/{{competencia.id}}/edit/{{i}}\\\"> {{ registro.categoria }} </td>\\n          <td routerLink=\\\"/distancias/{{competencia.id}}/edit/{{i}}\\\"> {{ registro.embarcacion }} </td>\\n          <td routerLink=\\\"/distancias/{{competencia.id}}/edit/{{i}}\\\"> {{ registro.distancia }} </td>\\n          <td class=\\\"text-center\\\">\\n            <a routerLink=\\\"/distancias/{{competencia.id}}/delete/{{i}}\\\" class=\\\"text-danger\\\">\\n              <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CompetenciaI } from '@models/competencia';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-competencia-info',\n  templateUrl: './competencia-info.component.html',\n  styles: []\n})\nexport class CompetenciaInfoComponent implements OnInit {\n  @Input() competencia: CompetenciaI;\n\n  constructor(private location: Location) { }\n\n  ngOnInit() {\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MessageService } from '@core/message/message.service';\nimport { CrudService } from '@services/crud.service';\n\nimport { CompetenciaI } from '@models/competencia';\nimport { CategoriaI } from '@models/categoria';\n\n@Component({\n  selector: 'app-distancias-form',\n  templateUrl: './distancias-form.component.html',\n  styles: ['']\n})\nexport class DistanciasFormComponent implements OnInit {\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\n  miForm: FormGroup;\n\n  competencia: CompetenciaI;\n  tblCategoria: CategoriaI[];\n\n  constructor(\n    private crudService: CrudService, \n    private fb: FormBuilder,      \n    private msg: MessageService,\n    private location: Location, \n    private actRoute: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    this.msg.clearMessages();\n    this.competencia = { \n      id: this.actRoute.snapshot.paramMap.get('idCompetencia'),\n      ...this.actRoute.snapshot.data['distanciaData'][0]\n    };\n    this.tblCategoria = this.actRoute.snapshot.data['distanciaData'][1];\n    \n    const action = this.actRoute.snapshot.paramMap.get('action');\n    this.templateData.titulo = this.getTitle(action);\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\n\n    this.buildForm();\n    if (this.templateData.titulo !== 'Agregar') {\n      this.setFormData();\n    }\n  }\n\n  buildForm() {\n    this.miForm = this.fb.group({\n      categoria: ['', [Validators.required] ],\n      embarcacion: ['', [Validators.required] ],\n      distancia: ['', [Validators.required] ]\n    });\n  }\n\n  setFormData() {\n    const record = this.competencia.distancia[this.templateData.id];\n    this.miForm.patchValue(record);\n    if (this.templateData.titulo==='Eliminar') {\n      this.miForm.controls.categoria.disable();\n    }\n  }\n\n  get embarcacion() {\n    return this.miForm.get('embarcacion');\n  }\n  get distancia() {\n    return this.miForm.get('distancia');\n  }\n  get categoria() {\n    return this.miForm.get('categoria');\n  }\n\n  onSubmit(submitBtn: HTMLButtonElement) {\n    submitBtn.disabled = true;\n    \n    this.prepararArreglo(this.templateData.titulo);\n    this.guardar();\n  }\n  \n  prepararArreglo(parAccion: string) {\n    let objDistancia = {\n      categoria: this.miForm.controls.categoria.value,\n      embarcacion: this.miForm.controls.embarcacion.value,\n      distancia: this.miForm.controls.distancia.value,\n    }\n    if (!this.competencia.distancia) {\n      this.competencia = {...this.competencia, distancia: [objDistancia]}\n    } else if (parAccion === 'Agregar') {\n      this.competencia.distancia.push(objDistancia)\n    } else if (parAccion === 'Modificar') {\n      this.competencia.distancia.splice(+this.templateData.id, 1, objDistancia)\n    } else if (parAccion === 'Eliminar') {\n      this.competencia.distancia.splice(+this.templateData.id, 1)\n    }\n  }\n\n  guardar() {\n    this.crudService.updateRecord$('competencias', this.competencia.id, this.competencia).subscribe(\n      _ => this.msg.ok(this.miForm.controls['distancia'].value + ' Actualizado satisfactoriamente'),\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\n      () => this.goBack()\n    );\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getTitle(action: string) {\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\n    return objTitle[action];\n  }\n  \n  getClassHeader(action: string) {\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\n    return objStyle[action];\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CompetenciaI } from '@models/competencia';\nimport { DistanciaI } from '@models/competencia';\n\n@Component({\n  selector: 'app-distanciass',\n  templateUrl: './distancias.component.html',\n  styles: []\n})\nexport class DistanciasComponent implements OnInit {\n  competencia: CompetenciaI;\n  tabla: DistanciaI[];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.competencia = { \n      id: this.route.snapshot.paramMap.get('idCompetencia'),\n      ...this.route.snapshot.data['distanciaData']\n    };\n    this.tabla = this.competencia.distancia;\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable, forkJoin } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CompetenciaI } from '@models/competencia';\nimport { CategoriaI } from '@models/categoria';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistanciasFormResolver  implements Resolve<[CompetenciaI, CategoriaI[]]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<[CompetenciaI, CategoriaI[]]> {\n    const idCompetencia = route.paramMap.get('idCompetencia');\n    const allData$ = forkJoin(\n      this.crudService.getRecord$('competencias', idCompetencia),\n      this.crudService.getAllRecords$('categorias','categoria')\n    );\n    \n    return allData$;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CompetenciaI } from '@models/competencia';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistanciasResolver implements Resolve<CompetenciaI> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<CompetenciaI> {\n    const id = route.paramMap.get('idCompetencia');\n    return this.crudService.getRecord$('competencias',id);\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DistanciasResolver } from './distancias-resolver.guard';\nimport { DistanciasFormResolver } from './distancias-form-resolver.guard';\n\nimport { DistanciasComponent } from './components/distancias.component';\nimport { DistanciasFormComponent } from './components/distancias-form.component';\n\nconst routes: Routes = [\n  { path: '', component: DistanciasComponent },\n  { path: ':idCompetencia', resolve: { distanciaData: DistanciasResolver }, component: DistanciasComponent },\n  { path: ':idCompetencia/:action', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent },\n  { path: ':idCompetencia/:action/:id', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DistanciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DistanciasRoutingModule } from './distancias-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DistanciasComponent } from './components/distancias.component';\nimport { DistanciasFormComponent } from './components/distancias-form.component';\nimport { CompetenciaInfoComponent } from './components/competencia-info.component';\n\n@NgModule({\n  declarations: [ DistanciasComponent, DistanciasFormComponent, CompetenciaInfoComponent ],\n  imports: [\n    CommonModule, DistanciasRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class DistanciasModule { }\n"],"sourceRoot":"webpack:///"}