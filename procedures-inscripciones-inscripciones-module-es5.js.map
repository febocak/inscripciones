{"version":3,"sources":["src/app/procedures/inscripciones/components/inscripciones-form.component.html","src/app/procedures/inscripciones/components/inscripciones.component.html","src/app/procedures/inscripciones/components/inscripciones-form.component.ts","src/app/procedures/inscripciones/components/inscripciones.component.ts","src/app/procedures/inscripciones/inscripciones-form-resolver.guard.ts","src/app/procedures/inscripciones/inscripciones-resolver.guard.ts","src/app/procedures/inscripciones/inscripciones-routing.module.ts","src/app/procedures/inscripciones/inscripciones.module.ts","src/app/services/array.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" inscipción\\\" }}\\n        \\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-9\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"palista\\\" class=\\\"control-label\\\"> Palista </label>\\n                <select formControlName=\\\"palista\\\" required\\n                  [class.is-invalid]=\\\"palista.invalid && palista.touched\\\" class=\\\"custom-select\\\"\\n                  (change)=\\\"selectPalista(palista.value)\\\">\\n                  <option value=\\\"\\\"></option>\\n                  <option [value]=\\\"registro.palista\\\" *ngFor=\\\"let registro of tblPalistas\\\" >{{ registro.palista }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"palista.untouched || !palista.hasError('required')\\\">El palista es requerido</small>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"genero\\\" class=\\\"control-label\\\"> Genero </label>\\n                    <input type=\\\"text\\\" formControlName=\\\"genero\\\" [readonly]=\\\"true\\\" required\\n                      [class.is-invalid]=\\\"(genero.invalid && genero.touched)\\\"\\n                      class=\\\"form-control\\\" />\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"genero.valid || genero.untouched\\\">El genero es requerido</small>\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"col-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"categoria\\\" class=\\\"control-label\\\"> Categoría </label>\\n                    <input type=\\\"text\\\" formControlName=\\\"categoria\\\" [readonly]=\\\"true\\\" required\\n                      [class.is-invalid]=\\\"(categoria.invalid && categoria.touched)\\\"\\n                      class=\\\"form-control\\\" />\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"categoria.valid || categoria.untouched\\\">La categoría es requerida</small>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\n                <select formControlName=\\\"club\\\" required \\n                  [class.is-invalid]=\\\"club.invalid && club.touched\\\" class=\\\"custom-select\\\">\\n                  <option value=\\\"\\\"></option>\\n                  <option [value]=\\\"registro.nombre\\\" *ngFor=\\\"let registro of tblClubes\\\" >{{ registro.nombre }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.untouched || !club.hasError('required')\\\">El club es requerido</small>\\n              </div>\\n            </div>\\n          \\n            <div class=\\\"col-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"distancia\\\" class=\\\"control-label\\\"> Distancia </label>\\n                <select multiple #selectDistancia formControlName=\\\"distancia\\\" required size=\\\"9\\\"\\n                  [class.is-invalid]=\\\"distancia.invalid && distancia.touched\\\" class=\\\"custom-select\\\" >\\n                  <option [value]=\\\"registro.embarcacion + ' ' + registro.distancia\\\" \\n                    *ngFor=\\\"let registro of tblDistancias\\\" >{{ registro.embarcacion + ' ' + registro.distancia }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"distancia.untouched || !distancia.hasError('required')\\\">La distancia es requerida</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header d-flex\\\">\\n    Inscripciones\\n    <a routerLink=\\\"/inscripciones/add\\\" class=\\\"text-primary ml-auto\\\">\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n    </a>\\n  </div>\\n</div>\\n\\n<table class=\\\"table table-bordered table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th>DNI </th>\\n      <th>Nombre </th>\\n      <th>Genero</th>\\n      <th>Categoría</th>\\n      <th>Carrera</th>\\n      <th> </th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.dni }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.palista }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.genero }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.categoria }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.distancia }} </td>\\n      <td>\\n        <a routerLink=\\\"/inscripciones/delete/{{registro.id}}\\\" class=\\\"text-danger ml-auto\\\">\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MessageService } from '@core/message/message.service';\nimport { CrudService } from '@services/crud.service';\n\nimport { ClubI } from '@models/club';\nimport { PalistaI } from '@models/palista';\nimport { CategoriaI } from '@models/categoria';\nimport { InscripcionI } from '@models/inscripcion';\nimport { DistanciaI } from '@models/competencia';\nimport { ArrayService } from '@services/array.service';\n\n@Component({\n  selector: 'app-inscripciones-form',\n  templateUrl: './inscripciones-form.component.html',\n  styles: ['']\n})\nexport class InscripcionesFormComponent implements OnInit {\n  @ViewChild('selectDistancia', {static: true}) selectDistancia: ElementRef;\n\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\n  miForm: FormGroup;\n  tblClubes: ClubI[];\n  tblCategorias: CategoriaI[];\n  tblPalistas: PalistaI[];\n  tblInscripciones: InscripcionI[];\n  tblDistancias: DistanciaI[];\n\n  constructor(\n    private crudService: CrudService, \n    private fb: FormBuilder,      \n    private msg: MessageService,\n    private location: Location, \n    private actRoute: ActivatedRoute,\n    private router: Router,\n    private arrayService: ArrayService) {\n  }\n\n  ngOnInit() {\n    this.msg.clearMessages();\n    this.tblClubes = this.actRoute.snapshot.data['inscripcionData'][1];\n    this.tblCategorias = this.actRoute.snapshot.data['inscripcionData'][2];\n    this.tblPalistas = this.actRoute.snapshot.data['inscripcionData'][3];\n    this.tblInscripciones = this.actRoute.snapshot.data['inscripcionData'][4];\n\n    const action = this.actRoute.snapshot.paramMap.get('action');\n    this.templateData.titulo = this.getTitle(action);\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\n\n    this.buildForm();\n    if (this.templateData.titulo !== 'Agregar') {\n      this.setFormData();\n    }\n  }\n\n  buildForm() {\n    this.miForm = this.fb.group({\n      palista: ['', [Validators.required, Validators.minLength(3)]],\n      dni: [''],\n      apellido: [''],\n      nombre: [''],\n      fnacimiento: [''],\n      genero: ['', [Validators.required]],\n      categoria: ['', [Validators.required]],\n      club: ['', [Validators.required]],\n      distancia: [[], [Validators.required]]\n\n    });\n    this.miForm.controls.club.disable();\n    \n  }\n\n  setFormData() {\n    const record = this.actRoute.snapshot.data['inscripcionData'][0];\n    this.miForm.patchValue(record);\n    this.tblDistancias = this.distanciasDeLaCategoria(record.categoria);\n    this.marcarDistancias(record.distancia);\n    this.miForm.controls.palista.disable();\n    this.miForm.controls.club.disable();\n\n    if (this.templateData.titulo==='Eliminar') {\n      this.miForm.controls.distancia.disable();\n    }\n  }\n\n  get palista() {\n    return this.miForm.get('palista');\n  }\n  get genero() {\n    return this.miForm.get('genero');\n  }\n  get categoria() {\n    return this.miForm.get('categoria');\n  }\n  get club() {\n    return this.miForm.get('club');\n  } \n  get distancia() {\n    return this.miForm.get('distancia');\n  }\n\n  onSubmit(submitBtn: HTMLButtonElement) {\n    submitBtn.disabled = true;\n    this.miForm.controls.club.enable();\n    const record = { id: this.templateData.id,...this.miForm.value }\n    switch (this.templateData.titulo) {\n      case 'Agregar':\n        this.aceptarAgregar(record);\n        break;\n      case 'Modificar':\n        this.aceptarEditar(record);\n        break;\n      case 'Eliminar':\n        this.aceptarEliminar(record);\n        break;\n    }\n  }\n  \n  aceptarAgregar(record: PalistaI) {\n    console.log('TCL: InscripcionesFormComponent -> aceptarAgregar -> record', record)\n    \n    this.crudService.addRecord$('inscripciones', record).subscribe(\n      _ => this.msg.ok(record.nombre.trim() + ' ' + record.apellido + ' Agregado satisfactoriamente'),\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\n      () => this.router.navigate(['inscripciones'])\n    );\n  }\n\n  aceptarEditar(record: PalistaI) {\n    this.crudService.updateRecord$('inscripciones', record.id, record).subscribe(\n      _ => this.msg.ok(record.nombre.trim() + ' ' + record.apellido + ' Actualizado satisfactoriamente'),\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\n      () => this.router.navigate(['inscripciones'])\n    );\n  }\n\n  aceptarEliminar(record: PalistaI) {\n    this.crudService.deleteRecord$('inscripciones', record.id).subscribe(\n      _ => this.msg.ok(record.nombre.trim() + ' ' + record.apellido + ' Eliminado satisfactoriamente'),\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\n      () => this.router.navigate(['inscripciones'])\n    );\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getTitle(action: string) {\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\n    return objTitle[action];\n  }\n  \n  getClassHeader(action: string) {\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\n    return objStyle[action];\n  }\n\n  selectPalista(valor) {\n    const palista = this.tblPalistas.find( element => element.palista === valor);\n    if (this.templateData.titulo === 'Agregar' && !!this.tblInscripciones.find( element => element.dni === palista.dni)) {\n      this.miForm.controls.palista.setValue('');\n      this.msg.warning(palista.palista + ' Ya está inscrito. Si lo desea modifique su inscripción');\n    } else {\n      this.miForm.patchValue(palista);\n      this.tblDistancias = this.distanciasDeLaCategoria(palista.categoria);\n    }\n  }\n\n  marcarDistancias(arrayDistancias){\n    const options = this.selectDistancia.nativeElement.options;\n    for ( let i = 0, len = options.length; i < len; i++ ) {\n      if ( arrayDistancias.indexOf( options[i].text ) != -1 ) {\n        options[i].selected = true;\n      }\n    }\n  }\n\n  distanciasDeLaCategoria(categoria: string) {\n    let todasLasDistancias = this.actRoute.snapshot.data['inscripcionData'][5].distancia;\n    return todasLasDistancias.filter( data => data.categoria === categoria);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-inscripciones',\n  templateUrl: './inscripciones.component.html',\n  styles: []\n})\nexport class InscripcionesComponent implements OnInit {\n  tabla: [];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['inscripcionData'];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\n\nimport { AuthService } from '@services/auth.service';\nimport { CrudService } from '@services/crud.service';\nimport { ClubI } from '@models/club';\nimport { InscripcionI } from '@models/Inscripcion';\nimport { CategoriaI } from '@models/categoria';\nimport { PalistaI } from '@models/palista';\nimport { DistanciaI, CompetenciaI } from '@models/competencia';\n\nimport { Observable, forkJoin } from 'rxjs';\nimport { map, tap, switchMap, first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InscripcionesFormResolver \n    implements Resolve<[InscripcionI, ClubI[], CategoriaI[], PalistaI[], InscripcionI[], CompetenciaI]> {\n\n  constructor(private crudService: CrudService, private authService: AuthService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \n    Observable<[InscripcionI, ClubI[], CategoriaI[], PalistaI[], InscripcionI[], CompetenciaI]> {\n    //TODO: el ID de competencia está fijo. Colocar el que corresponda\n    const competencia = this.crudService.getRecord$<CompetenciaI>('consola','01');\n    const club = this.authService.getUser().club;\n    const id = route.paramMap.get('id');\n    const allData$ = forkJoin(\n      this.crudService.getRecord$('inscripciones',id),\n      this.crudService.getAllRecords$('clubes','nombre'),\n      this.crudService.getAllRecords$('categorias','desde'),\n      this.crudService.queryByField$('palistas','club',club),\n      this.crudService.queryByField$('inscripciones','club',club),\n      this.crudService.getRecord$('competencias','lJBIk7KClZmifrIrSysT')\n    );\n    \n    return allData$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { InscripcionI } from '@models/inscripcion';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from '@services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InscripcionesResolver implements Resolve<InscripcionI[]> {\n\n  constructor(private crudService: CrudService, private authService: AuthService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<InscripcionI[]> {\n    const club = this.authService.getUser().club;\n    return this.crudService.queryByField$('inscripciones','club',club);\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InscripcionesResolver } from './inscripciones-resolver.guard';\nimport { InscripcionesComponent } from './components/inscripciones.component';\nimport { InscripcionesFormComponent } from './components/inscripciones-form.component';\nimport { InscripcionesFormResolver } from './inscripciones-form-resolver.guard';\n\n\nconst routes: Routes = [\n  { path: '', resolve: { inscripcionData: InscripcionesResolver }, component: InscripcionesComponent },\n  { path: ':action', resolve: { inscripcionData: InscripcionesFormResolver}, component: InscripcionesFormComponent },\n  { path: ':action/:id', resolve: { inscripcionData: InscripcionesFormResolver }, component: InscripcionesFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InscripcionesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InscripcionesRoutingModule } from './inscripciones-routing.module';\nimport { InscripcionesComponent } from './components/inscripciones.component';\nimport { InscripcionesFormComponent } from './components/inscripciones-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [InscripcionesComponent, InscripcionesFormComponent],\n  imports: [\n    CommonModule, InscripcionesRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class InscripcionesModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArrayService {\n\n  constructor() { }\n\n  groupAndFlat(source: any[], parFields: string[]) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n    let group = this.concatFields(copySource[0], parFields);\n    newArray.push(copySource[0]);\n\n    for (let i = 0; i < copySource.length; i++) {\n      let newGroup = this.concatFields(copySource[i], parFields)\n      if ( newGroup !== group ) {\n        group = newGroup;\n        newArray.push(copySource[i]);\n      }\n    }\n\n    return newArray;\n  }\n\n  groupAndCount(source: any[], parFields: string[]) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n\n    let i = 0; \n    while (i < copySource.length) {\n      let contador = 0;\n      let group = this.concatFields(copySource[i], parFields);\n      let element = copySource[i];\n      while (i < copySource.length && group === this.concatFields(copySource[i], parFields)) {\n        i++;\n        contador++;\n      }\n      newArray.push({...element, cantidad: contador});\n    }\n\n    return newArray;\n  }\n\n  groupAndSum(source: any[], parFields: string[], fieldSum: number | string) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n\n    let i = 0; \n    while (i < copySource.length) {\n      let suma = 0;\n      let group = this.concatFields(copySource[i], parFields);\n      let element = copySource[i];\n      while (i < copySource.length && group === this.concatFields(copySource[i], parFields)) {\n        suma += +copySource[i][fieldSum];\n        i++;\n      }\n      newArray.push({...element, suma});\n    }\n\n    return newArray;\n  }\n\n  concatFields(obj: any, fields: string[]) {\n    return fields.reduce( (acc, el) => acc + obj[el].trim(), '');\n  }\n\n  mayMinOrEqual(parA: any, parB: any, fields: string[]) {\n    const A = this.concatFields(parA, fields);\n    const B = this.concatFields(parB, fields);\n\n    if (A > B ) {\n      return 1;\n    }\n    if (B > A ) {\n      return -1;\n    };\n    return 0\n\n  }\n\n}\n\n/*\n\n   --- ALGUNAS PRUEBAS ---\nconst contarArray = this.arrayService.groupAndCount(todasLasDistancias, ['embarcacion','distancia']);\n    console.log('TCL: InscripcionesFormComponent -> ngOnInit -> contarArray', contarArray)\n    const sumarArray = this.arrayService.groupAndSum(todasLasDistancias, ['embarcacion','distancia'], 'distancia');\n    console.log('TCL: InscripcionesFormComponent -> ngOnInit -> sumarArray', sumarArray)\n*/"],"sourceRoot":"webpack:///"}