{"version":3,"sources":["src/app/tables/usuarios/components/usuarios-form.component.html","src/app/tables/usuarios/components/usuarios.component.html","src/app/shared/compare-validator.directive.ts","src/app/shared/shared.module.ts","src/app/tables/usuarios/components/usuarios-form.component.ts","src/app/tables/usuarios/components/usuarios.component.ts","src/app/tables/usuarios/usuarios-form-resolver.guard.ts","src/app/tables/usuarios/usuarios-resolver.guard.ts","src/app/tables/usuarios/usuarios-routing.module.ts","src/app/tables/usuarios/usuarios.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" usuario\\\" }}\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"control-label\\\"> Nombre </label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n              [class.is-invalid]=\\\"name.invalid && name.touched\\\" class=\\\"form-control\\\" />\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.untouched || !name.hasError('required')\\\">El campo nombre es\\n              requerido</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"control-label\\\"> Email </label>\\n            <input type=\\\"email\\\" formControlName=\\\"email\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n              [class.is-invalid]=\\\"email.invalid && email.touched\\\" class=\\\"form-control\\\" />\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"email.untouched || !email.hasError('required')\\\">El campo email es\\n              requerido</small>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"email.untouched || !email.hasError('uniqueEmail')\\\">Ya existe un\\n              usuario con este email</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rol\\\" class=\\\"control-label\\\"> Rol </label>\\n            <select formControlName=\\\"rol\\\" required [class.is-invalid]=\\\"rol.invalid && rol.touched\\\"\\n              class=\\\"custom-select\\\">\\n              <option value=\\\"rol\\\"></option>\\n              <option value=\\\"Inscripciones\\\">Inscripciones</option>\\n              <option value=\\\"Administración\\\">Administración</option>\\n              <option value=\\\"Competencias\\\">Competencias</option>\\n            </select>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"rol.untouched || !rol.hasError('required')\\\">El rol es\\n              requerido</small>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"rol.untouched || !rol.hasError('invalidGenero')\\\">Seleccione el\\n              rol</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\n            <select formControlName=\\\"club\\\" required [class.is-invalid]=\\\"club.invalid && club.touched\\\"\\n              class=\\\"custom-select\\\">\\n              <option value=\\\"club\\\"></option>\\n              <option [value]=\\\"item.nombre\\\" *ngFor=\\\"let item of tblClubes\\\">{{ item.nombre }}</option>\\n            </select>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.valid || club.untouched\\\">El club es requerido</small>\\n          </div>\\n\\n          <div *ngIf=\\\"templateData.titulo === 'Agregar'\\\" class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\" class=\\\"control-label\\\"> Contraseña </label>\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\"\\n                  [class.is-invalid]=\\\"password.invalid && password.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.untouched || !password.hasError('required')\\\">El\\n                  campo contraseña es requerido</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.untouched || !password.hasError('minlength')\\\">La\\n                  longitud mínima es de 6 caracteres</small>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password2\\\" class=\\\"control-label\\\"> Confireme contraseña </label>\\n                <input type=\\\"password\\\" formControlName=\\\"password2\\\"\\n                  [class.is-invalid]=\\\"password2.invalid && password2.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password2.untouched || !password2.hasError('required')\\\">El\\n                  campo contraseña es requerido</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password2.untouched || !password2.hasError('minlength')\\\">La\\n                  longitud mínima es de 6 caracteres</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password2.untouched || !password2.hasError('compare')\\\">La\\n                  contraseña y la confirmación no coinciden</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\" type=\\\"submit\\\"\\n                class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header d-flex\\\">\\n    Usuarios\\n    <a routerLink=\\\"/usuarios/add\\\" class=\\\"text-primary ml-auto\\\">\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n    </a>\\n  </div>\\n</div>\\n\\n<table class=\\\"table table-bordered table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th> Nombre </th>\\n      <th> Email </th>\\n      <th> Rol </th>\\n      <th> Club </th>\\n      <th> </th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.name }} </td>\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.email }} </td>\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.rol }} </td>\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.club }} </td>\\n      <td class=\\\"text-center\\\">\\n        <a routerLink=\\\"/usuarios/delete/{{registro.id}}\\\" class=\\\"text-danger\\\">\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import { Directive, Input } from '@angular/core';\nimport { Validators, AbstractControl, ValidationErrors, NG_VALIDATORS, ValidatorFn } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nexport function compareValidator(controlNameToCompare: string): ValidatorFn {\n  return (c: AbstractControl): ValidationErrors | null => {\n    if (c.value === null || c.value.length === 0) {\n      return null;\n    }\n    const controlToCompare = c.root.get(controlNameToCompare);\n    if (controlToCompare) {\n      const subscription: Subscription = controlToCompare.valueChanges.subscribe(() => {\n        c.updateValueAndValidity();\n        subscription.unsubscribe();\n      });\n      return controlToCompare && controlToCompare.value !== c.value ? {'compare': true} : null;\n    }\n  }\n}\n@Directive({\n  selector: '[compare]',\n  providers: [{\n    provide: NG_VALIDATORS, \n    useExisting: CompareValidatorDirective,\n    multi: true\n  }]\n})\nexport class CompareValidatorDirective implements Validators{\n  @Input('compare') controlNameToCompare: string;\n  \n  validate(c: AbstractControl): ValidationErrors {\n    return compareValidator(this.controlNameToCompare)(c);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompareValidatorDirective } from './compare-validator.directive';\n\n@NgModule({\n  declarations: [\n    CompareValidatorDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CompareValidatorDirective\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MessageService } from '@core/message/message.service';\nimport { CrudService } from '@services/crud.service';\nimport { AuthService } from '@services/auth.service';\n\nimport { compareValidator } from '../../../shared/compare-validator.directive';\n\nimport { ClubI } from '@models/club';\nimport { UserI } from '@models/user';\n\n@Component({\n  selector: 'app-usuarios-form',\n  templateUrl: './usuarios-form.component.html',\n  styles: ['']\n})\nexport class UsuariosFormComponent implements OnInit {\n  uniqueEmail;\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\n  miForm: FormGroup;\n  tblClubes: ClubI[];\n\n  constructor(\n    private crudService: CrudService, \n    private authService: AuthService,\n    private fb: FormBuilder,      \n    private msg: MessageService,\n    private location: Location, \n    private actRoute: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    this.msg.clearMessages();\n    this.tblClubes = this.actRoute.snapshot.data['usuarioData'][1];\n\n    const action = this.actRoute.snapshot.paramMap.get('action');\n    this.templateData.titulo = this.getTitle(action);\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\n\n    this.buildForm();\n    if (this.templateData.titulo !== 'Agregar') {\n      this.setFormData();\n    }\n  }\n\n  buildForm() {\n    \n    this.miForm = this.fb.group({\n      name: ['', [Validators.required] ],\n      email: ['', [Validators.required] ],\n      rol: ['', [Validators.required]],\n      club: ['', [Validators.required] ],\n      password: ['', [Validators.required, Validators.minLength(6)] ],\n      password2: ['', [Validators.required, Validators.minLength(6), compareValidator('password')] ]\n    });\n\n    if (this.templateData.titulo !== 'Agregar') {\n      this.miForm.removeControl('password');\n      this.miForm.removeControl('password2');\n    }\n\n  }\n\n  setFormData() {\n    const record = this.actRoute.snapshot.data['usuarioData'][0];\n    this.miForm.patchValue(record);\n    if (this.templateData.titulo==='Eliminar') {\n      this.miForm.controls.club.disable();\n      this.miForm.controls.rol.disable();\n    }\n  }\n\n  get name() {\n    return this.miForm.get('name');\n  }\n  get email() {\n    return this.miForm.get('email');\n  }\n  get club() {\n    return this.miForm.get('club');\n  }\n  get rol() {\n    return this.miForm.get('rol');\n  }\n  get password() {\n    return this.miForm.get('password');\n  }\n  get password2() {\n    return this.miForm.get('password2');\n  }\n\n  onSubmit(submitBtn: HTMLButtonElement) {\n    submitBtn.disabled = true;\n    \n    const record = { id: this.templateData.id,...this.miForm.value }\n    switch (this.templateData.titulo) {\n      case 'Agregar':\n        this.aceptarAgregar(record);\n        break;\n      case 'Modificar':\n        this.aceptarEditar(record);\n        break;\n      case 'Eliminar':\n        this.aceptarEliminar(record);\n        break;\n    }\n  }\n  \n  aceptarAgregar(record: UserI) {\n    this.crudService.addRecord$('users', record).subscribe(\n      _ => {\n        this.authService.afAuth.auth.createUserWithEmailAndPassword(record.email, record.password).then(\n          () => this.msg.ok(this.miForm.controls['name'].value + ' Agregado satisfactoriamente'),\n          error => this.msg.error('Error al agregar los datos: ' + error.statusText)\n        )\n      },\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\n      () => this.router.navigate(['usuarios'])\n    );\n  }\n\n  aceptarEditar(record: UserI) {\n    this.crudService.updateRecord$('users', record.id, record).subscribe(\n      _ => this.msg.ok(record.name + ' Actualizado satisfactoriamente'),\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\n      () => this.router.navigate(['usuarios'])\n    );\n  }\n\n  aceptarEliminar(record: UserI) {\n    this.crudService.deleteRecord$('users', record.id).subscribe(\n      _ => this.msg.ok(record.name + ' Eliminado satisfactoriamente'),\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\n      () => this.router.navigate(['usuarios'])\n    );\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getTitle(action: string) {\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\n    return objTitle[action];\n  }\n  \n  getClassHeader(action: string) {\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\n    return objStyle[action];\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styles: []\n})\nexport class UsuariosComponent implements OnInit {\n  tabla = [];\n  constructor( private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['usuarioData'];\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CrudService } from '@services/crud.service';\nimport { ClubI } from '@models/club';\nimport { UserI } from '@models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosFormResolver implements Resolve<[UserI, ClubI[]]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<[UserI, ClubI[]]> {\n    const id = route.paramMap.get('id');\n    const allData$ = forkJoin(\n      this.crudService.getRecord$('users',id),\n      this.crudService.getAllRecords$('clubes','nombre')\n    );\n    \n    return allData$;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { UserI } from '@models/user';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosResolver implements Resolve<UserI[]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<UserI[]> {\n    return this.crudService.getAllRecords$('users','name');\n  }\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsuariosComponent } from './components/usuarios.component';\r\nimport { UsuariosFormComponent } from './components/usuarios-form.component';\r\nimport { UsuariosResolver } from './usuarios-resolver.guard';\r\nimport { UsuariosFormResolver } from './usuarios-form-resolver.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', resolve: { usuarioData: UsuariosResolver }, component: UsuariosComponent },\r\n  { path: ':action', resolve: { usuarioData: UsuariosFormResolver }, component: UsuariosFormComponent },\r\n  { path: ':action/:id', resolve: { usuarioData: UsuariosFormResolver }, component: UsuariosFormComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsuariosRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UsuariosRoutingModule } from './usuarios-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { UsuariosComponent } from './components/usuarios.component';\nimport { UsuariosFormComponent } from './components/usuarios-form.component';\n\n@NgModule({\n  declarations: [UsuariosComponent, UsuariosFormComponent],\n  imports: [\n    CommonModule, UsuariosRoutingModule,\n    FormsModule, ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class UsuariosModule { }\n"],"sourceRoot":"webpack:///"}